<UserControl x:Class="SOTFEdit.View.GameStatePage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:SOTFEdit.ViewModel"
             xmlns:infrastructure="clr-namespace:SOTFEdit.Infrastructure"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:model="clr-namespace:SOTFEdit.Model"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModel:GameStatePageViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <infrastructure:GenericSettingTypeToVisibilityConverter x:Key="GenericSettingTypeToVisibilityConverter" />
    </UserControl.Resources>
    <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <GroupBox Header="Game State" Padding="10" Margin="0 0 0 10">
            <DataGrid Height="Auto" DockPanel.Dock="Top" AutoGenerateColumns="False"
                      SelectionMode="Single" ItemsSource="{Binding Settings}" CanUserAddRows="false"
                      CanUserDeleteRows="False">
                <DataGrid.Resources>
                    <DataTemplate x:Key="DataTemplate" DataType="{x:Type model:GenericSetting}">
                        <Grid>
                            <TextBlock VerticalAlignment="Center" Text="{Binding StringValue}"
                                       Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=ReadOnly}" />
                            <TextBox Text="{Binding StringValue, UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=String}" />
                            <CheckBox IsChecked="{Binding BoolValue, UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=Bool}" />
                            <ComboBox ItemsSource="{Binding PossibleValues}"
                                      DisplayMemberPath="Value"
                                      SelectedValuePath="Key"
                                      SelectedValue="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=Combo}" />
                            <mah:NumericUpDown Minimum="{Binding MinInt}" Maximum="{Binding MaxInt}"
                                               Value="{Binding IntValue, UpdateSourceTrigger=PropertyChanged}"
                                               Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=Int}" />
                        </Grid>
                    </DataTemplate>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}" Header="Setting" IsReadOnly="True" />
                    <DataGridTemplateColumn Header="Value" CellTemplate="{StaticResource DataTemplate}" />
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <GroupBox Header="World Object States" Padding="10" Grid.Row="1">
            <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Margin="0 0 0 10">
                    I haven't fully investigated which values represent which state. Presumably:
                    <LineBreak />
                    - 0 = Unset/Closed/Not happened
                    <LineBreak />
                    - 1 or 3 = Set/Opened/Happened
                </TextBlock>

                <DataGrid Height="Auto" Grid.Row="1" DockPanel.Dock="Top" AutoGenerateColumns="False"
                          SelectionMode="Single" ItemsSource="{Binding NamedIntDatas}" CanUserAddRows="false"
                          CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="DataTemplate" DataType="{x:Type model:GenericSetting}">
                            <Grid>
                                <TextBlock VerticalAlignment="Center" Text="{Binding StringValue}"
                                           Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=ReadOnly}" />
                                <TextBox Text="{Binding StringValue, UpdateSourceTrigger=PropertyChanged}"
                                         Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=String}" />
                                <CheckBox IsChecked="{Binding BoolValue, UpdateSourceTrigger=PropertyChanged}"
                                          Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=Bool}" />
                                <ComboBox ItemsSource="{Binding PossibleValues}"
                                          DisplayMemberPath="Value"
                                          SelectedValuePath="Key"
                                          SelectedValue="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                                          Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=Combo}" />
                                <mah:NumericUpDown Minimum="{Binding MinInt}" Maximum="{Binding MaxInt}"
                                                   Value="{Binding IntValue, UpdateSourceTrigger=PropertyChanged}"
                                                   Visibility="{Binding Path=Type, Converter={StaticResource GenericSettingTypeToVisibilityConverter}, ConverterParameter=Int}" />
                            </Grid>
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}" Header="Setting" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Value" CellTemplate="{StaticResource DataTemplate}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>