<UserControl x:Class="SOTFEdit.View.InventoryPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:SOTFEdit.ViewModel"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModel:InventoryPageViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <DataTemplate x:Key="NumericUpDownTemplate" DataType="{x:Type viewModel:InventoryItem}">
                <Grid>
                    <mah:NumericUpDown ToolTip="The amount that you have in your inventory"
                                       Value="{Binding TotalCount, UpdateSourceTrigger=PropertyChanged}"
                                       Minimum="1" Maximum="{Binding Max, Mode=OneTime}" />
                </Grid>
            </DataTemplate>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <GroupBox Header="Items in Inventory" Margin="0 0 5 0" Padding="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0 0 0 10">
                    <Button Name="AddAllFromCategoryButton" Margin="0 0 5 0">
                        <Button.ContextMenu>
                            <ContextMenu VerticalContentAlignment="Top" ItemsSource="{Binding Categories}"
                                         DisplayMemberPath="TypeRendered">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                                        <Setter Property="Command"
                                                Value="{Binding DataContext.AddAllFromCategoryCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <Button.Content>Add All From Category</Button.Content>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction
                                    TargetObject="{Binding ContextMenu, ElementName=AddAllFromCategoryButton}"
                                    PropertyName="PlacementTarget"
                                    Value="{Binding ElementName=AddAllFromCategoryButton, Mode=OneWay}" />
                                <b:ChangePropertyAction
                                    TargetObject="{Binding ContextMenu, ElementName=AddAllFromCategoryButton}"
                                    PropertyName="IsOpen"
                                    Value="True" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <Button Command="{Binding SetAllEquippedToMinCommand}" Margin="0 0 5 0">Set All to Min</Button>
                    <Button Background="{DynamicResource MahApps.Brushes.Accent}"
                            Command="{Binding SetAllEquippedToMaxCommand}" Margin="0 0 5 0">
                        Set All to Max
                    </Button>
                    <Button Background="DarkRed"
                            Command="{Binding RemoveAllEquippedCommand}">
                        Remove All
                    </Button>
                </StackPanel>
                <TextBox Grid.Row="1"
                         Margin="0,0,0,10"
                         Padding="5"
                         Text="{Binding InventoryFilter, UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Watermark="Filter..." mah:TextBoxHelper.ClearTextButton="True" />
                <DataGrid Grid.Row="2" EnableRowVirtualization="True"
                          EnableColumnVirtualization="True" AutoGenerateColumns="False"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionMode="Single"
                          ItemsSource="{Binding InventoryCollectionView, IsAsync=True}" CanUserAddRows="False"
                          CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="ActionButtons" DataType="{x:Type viewModel:InventoryItem}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Button Margin="0,0,5,0" Background="DarkRed"
                                        Command="{Binding DataContext.RemoveItemFromInventoryCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding}">
                                    Remove
                                </Button>
                                <Button Background="{DynamicResource MahApps.Brushes.Accent}" Margin="0,0,5,0"
                                        Command="{Binding SetToMaxCommand}">
                                    Max
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id, Mode=OneTime}" Header="ID" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}" Header="Name" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding NameDe, Mode=OneTime}" Header="Name (De)"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding Type, Mode=OneTime}" Header="Type" IsReadOnly="True" />
                        <DataGridTemplateColumn SortMemberPath="TotalCount" Header="Count"
                                                CellTemplate="{StaticResource NumericUpDownTemplate}" />
                        <DataGridTemplateColumn Header="Actions"
                                                CellTemplate="{StaticResource ActionButtons}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Column="1" Header="Unassigned Items" Padding="10" Margin="5 0 0 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox
                    Margin="0,0,0,10"
                    Padding="5"
                    Text="{Binding UnassignedItemsFilter, UpdateSourceTrigger=PropertyChanged}"
                    mah:TextBoxHelper.Watermark="Filter..." mah:TextBoxHelper.ClearTextButton="True" />
                <DataGrid Grid.Row="1" EnableRowVirtualization="True"
                          EnableColumnVirtualization="True" AutoGenerateColumns="False"
                          SelectionMode="Single"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          ItemsSource="{Binding UnassignedItemsCollectionView, IsAsync=True}" IsReadOnly="True">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="ActionButtons" DataType="{x:Type viewModel:InventoryItem}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Button Margin="0,0,5,0" Background="{DynamicResource MahApps.Brushes.Accent}"
                                        Command="{Binding DataContext.AddUnassignedItemCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding}">
                                    Add
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id, Mode=OneTime}" Header="ID" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}" Header="Name" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding NameDe, Mode=OneTime}" Header="Name (De)"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding Type, Mode=OneTime}" Header="Type" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TotalCount, Mode=OneTime}" Header="Count">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn Header="Actions"
                                                CellTemplate="{StaticResource ActionButtons}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>