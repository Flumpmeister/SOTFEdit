<UserControl x:Class="SOTFEdit.View.InventoryPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:SOTFEdit.ViewModel"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:infrastructure="clr-namespace:SOTFEdit.Infrastructure"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModel:InventoryPageViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <DataTemplate x:Key="NumericUpDownTemplate" DataType="{x:Type viewModel:InventoryItem}">
                <Grid>
                    <mah:NumericUpDown ToolTip="{infrastructure:Translate 'inventory.table.count.tooltip'}"
                                       Value="{Binding TotalCount, UpdateSourceTrigger=PropertyChanged}"
                                       Minimum="1" Maximum="{Binding Max, Mode=OneTime}" />
                </Grid>
            </DataTemplate>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <GroupBox Header="{infrastructure:Translate 'inventory.headers.itemsInInventory'}" Margin="0 0 5 0"
                  Padding="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0 0 0 10">
                    <Button Name="AddAllFromCategoryButton" Margin="0 0 5 0"
                            Content="{infrastructure:Translate 'inventory.buttons.addAllFromCategory'}">
                        <Button.ContextMenu>
                            <ContextMenu VerticalContentAlignment="Top" ItemsSource="{Binding Categories}"
                                         DisplayMemberPath="TypeRendered">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="{x:Type MenuItem}"
                                           BasedOn="{StaticResource MahApps.Styles.MenuItem}">
                                        <Setter Property="Command"
                                                Value="{Binding DataContext.AddAllFromCategoryCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                        <Setter Property="CommandParameter" Value="{Binding}" />
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:ChangePropertyAction
                                    TargetObject="{Binding ContextMenu, ElementName=AddAllFromCategoryButton}"
                                    PropertyName="PlacementTarget"
                                    Value="{Binding ElementName=AddAllFromCategoryButton, Mode=OneWay}" />
                                <b:ChangePropertyAction
                                    TargetObject="{Binding ContextMenu, ElementName=AddAllFromCategoryButton}"
                                    PropertyName="IsOpen"
                                    Value="True" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <Button Command="{Binding SetAllEquippedToMinCommand}" Margin="0 0 5 0"
                            Content="{infrastructure:Translate 'inventory.buttons.setAllToMin'}" />
                    <Button Background="{DynamicResource MahApps.Brushes.Accent}"
                            Command="{Binding SetAllEquippedToMaxCommand}" Margin="0 0 5 0"
                            Content="{infrastructure:Translate 'inventory.buttons.setAllToMax'}" />
                    <Button Background="DarkRed"
                            Command="{Binding RemoveAllEquippedCommand}"
                            Content="{infrastructure:Translate 'inventory.buttons.removeAll'}" />
                </StackPanel>
                <TextBox Grid.Row="1"
                         Margin="0,0,0,10"
                         Padding="5"
                         Text="{Binding InventoryFilter, UpdateSourceTrigger=PropertyChanged}"
                         mah:TextBoxHelper.Watermark="{infrastructure:Translate 'inventory.filterWatermark'}"
                         mah:TextBoxHelper.ClearTextButton="True" />
                <DataGrid Grid.Row="2" EnableRowVirtualization="True"
                          EnableColumnVirtualization="True" AutoGenerateColumns="False"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          SelectionMode="Single"
                          ItemsSource="{Binding InventoryCollectionView, IsAsync=True}" CanUserAddRows="False"
                          CanUserDeleteRows="False">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="ActionButtons" DataType="{x:Type viewModel:InventoryItem}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Button Margin="0,0,5,0" Background="DarkRed"
                                        Command="{Binding DataContext.RemoveItemFromInventoryCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding}"
                                        Content="{infrastructure:Translate 'inventory.buttons.remove'}" />
                                <Button Background="{DynamicResource MahApps.Brushes.Accent}" Margin="0,0,5,0"
                                        Command="{Binding SetToMaxCommand}"
                                        Content="{infrastructure:Translate 'inventory.buttons.max'}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.id'}" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.name'}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TypeRendered, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.type'}"
                                            IsReadOnly="True" />
                        <DataGridTemplateColumn SortMemberPath="TotalCount"
                                                Header="{infrastructure:Translate 'inventory.table.count.text'}"
                                                CellTemplate="{StaticResource NumericUpDownTemplate}" />
                        <DataGridTemplateColumn Header="{infrastructure:Translate 'inventory.table.actions'}"
                                                CellTemplate="{StaticResource ActionButtons}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
        <GroupBox Grid.Column="1" Header="{infrastructure:Translate 'inventory.headers.unassignedItems'}" Padding="10"
                  Margin="5 0 0 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox
                    Margin="0,0,0,10"
                    Padding="5"
                    Text="{Binding UnassignedItemsFilter, UpdateSourceTrigger=PropertyChanged}"
                    mah:TextBoxHelper.Watermark="{infrastructure:Translate 'inventory.filterWatermark'}"
                    mah:TextBoxHelper.ClearTextButton="True" />
                <DataGrid Grid.Row="1" EnableRowVirtualization="True"
                          EnableColumnVirtualization="True" AutoGenerateColumns="False"
                          SelectionMode="Single"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.IsVirtualizing="True"
                          ItemsSource="{Binding UnassignedItemsCollectionView, IsAsync=True}" IsReadOnly="True">
                    <DataGrid.Resources>
                        <DataTemplate x:Key="ActionButtons" DataType="{x:Type viewModel:InventoryItem}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Button Margin="0,0,5,0" Background="{DynamicResource MahApps.Brushes.Accent}"
                                        Command="{Binding DataContext.AddUnassignedItemCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        CommandParameter="{Binding}" Content="{infrastructure:Translate 'generic.add'}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Id, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.id'}" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding Name, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.name'}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TypeRendered, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.type'}"
                                            IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TotalCount, Mode=OneTime}"
                                            Header="{infrastructure:Translate 'inventory.table.count.text'}">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn Header="{infrastructure:Translate 'inventory.table.actions'}"
                                                CellTemplate="{StaticResource ActionButtons}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>