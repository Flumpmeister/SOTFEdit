// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(16)
            {
                { typeof(global::System.Collections.Generic.HashSet<int>), 0 },
                { typeof(global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>), 1 },
                { typeof(global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>), 2 },
                { typeof(global::SOTFEdit.Companion.Shared.CharacterTarget), 3 },
                { typeof(global::SOTFEdit.Companion.Shared.PoiGroupType), 4 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage), 5 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage), 6 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage), 7 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage), 8 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage), 9 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage), 10 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage), 11 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage), 12 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage), 13 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage), 14 },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage), 15 },
            };
        }

        internal static object GetFormatter(global::System.Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.HashSetFormatter<int>();
                case 1: return new global::MessagePack.Formatters.ListFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>();
                case 2: return new global::MessagePack.Formatters.ListFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>();
                case 3: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.CharacterTargetFormatter();
                case 4: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.PoiGroupTypeFormatter();
                case 5: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.ICompanionMessageFormatter();
                case 6: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessageFormatter();
                case 7: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessageFormatter();
                case 8: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessageFormatter();
                case 9: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessageFormatter();
                case 10: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionPoiMessageFormatter();
                case 11: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessageFormatter();
                case 12: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionPosMessageFormatter();
                case 13: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessageFormatter();
                case 14: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessageFormatter();
                case 15: return new MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessageFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1649 // File name should match first type name


// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.SOTFEdit.Companion.Shared
{

    public sealed class CharacterTargetFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.CharacterTarget>
    {
        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.CharacterTarget value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((global::System.Int32)value);
        }

        public global::SOTFEdit.Companion.Shared.CharacterTarget Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::SOTFEdit.Companion.Shared.CharacterTarget)reader.ReadInt32();
        }
    }

    public sealed class PoiGroupTypeFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.PoiGroupType>
    {
        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.PoiGroupType value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((global::System.Int32)value);
        }

        public global::SOTFEdit.Companion.Shared.PoiGroupType Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::SOTFEdit.Companion.Shared.PoiGroupType)reader.ReadInt32();
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name


// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages
{
    public sealed class ICompanionMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage>
    {
        private readonly global::System.Collections.Generic.Dictionary<global::System.RuntimeTypeHandle, global::System.Collections.Generic.KeyValuePair<int, int>> typeToKeyAndJumpMap;
        private readonly global::System.Collections.Generic.Dictionary<int, int> keyToJumpMap;

        public ICompanionMessageFormatter()
        {
            this.typeToKeyAndJumpMap = new global::System.Collections.Generic.Dictionary<global::System.RuntimeTypeHandle, global::System.Collections.Generic.KeyValuePair<int, int>>(10, global::MessagePack.Internal.RuntimeTypeHandleEqualityComparer.Default)
            {
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(0, 0) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(1, 1) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(2, 2) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(3, 3) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(4, 4) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(5, 5) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(6, 6) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(7, 7) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(8, 8) },
                { typeof(global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage).TypeHandle, new global::System.Collections.Generic.KeyValuePair<int, int>(9, 9) },
            };
            this.keyToJumpMap = new global::System.Collections.Generic.Dictionary<int, int>(10)
            {
                { 0, 0 },
                { 1, 1 },
                { 2, 2 },
                { 3, 3 },
                { 4, 4 },
                { 5, 5 },
                { 6, 6 },
                { 7, 7 },
                { 8, 8 },
                { 9, 9 },
            };
        }

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            global::System.Collections.Generic.KeyValuePair<int, int> keyValuePair;
            if (value != null && this.typeToKeyAndJumpMap.TryGetValue(value.GetType().TypeHandle, out keyValuePair))
            {
                writer.WriteArrayHeader(2);
                writer.WriteInt32(keyValuePair.Key);
                switch (keyValuePair.Value)
                {
                    case 0:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage)value, options);
                        break;
                    case 1:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage)value, options);
                        break;
                    case 2:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage)value, options);
                        break;
                    case 3:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage)value, options);
                        break;
                    case 4:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage)value, options);
                        break;
                    case 5:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage)value, options);
                        break;
                    case 6:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage)value, options);
                        break;
                    case 7:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage)value, options);
                        break;
                    case 8:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage)value, options);
                        break;
                    case 9:
                        global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage>(options.Resolver).Serialize(ref writer, (global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage)value, options);
                        break;
                    default:
                        break;
                }

                return;
            }

            writer.WriteNil();
        }

        public global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            if (reader.ReadArrayHeader() != 2)
            {
                throw new global::System.InvalidOperationException("Invalid Union data was detected. Type:global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage");
            }

            options.Security.DepthStep(ref reader);
            var key = reader.ReadInt32();

            if (!this.keyToJumpMap.TryGetValue(key, out key))
            {
                key = -1;
            }

            global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage result = null;
            switch (key)
            {
                case 0:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 1:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 2:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 3:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 4:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 5:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 6:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 7:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 8:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                case 9:
                    result = (global::SOTFEdit.Companion.Shared.Messages.ICompanionMessage)global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage>(options.Resolver).Deserialize(ref reader, options);
                    break;
                default:
                    reader.Skip();
                    break;
            }

            reader.Depth--;
            return result;
        }
    }


}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name


// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.SOTFEdit.Companion.Shared.Messages
{
    public sealed class CompanionAddPoiMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(7);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Title, options);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Description, options);
            writer.Write(value.Screenshot);
            writer.Write(value.X);
            writer.Write(value.Y);
            writer.Write(value.Z);
            writer.Write(value.AreaMask);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionAddPoiMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.Title = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        ____result.Description = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 2:
                        ____result.Screenshot = global::MessagePack.Internal.CodeGenHelpers.GetArrayFromNullableSequence(reader.ReadBytes());
                        break;
                    case 3:
                        ____result.X = reader.ReadSingle();
                        break;
                    case 4:
                        ____result.Y = reader.ReadSingle();
                        break;
                    case 5:
                        ____result.Z = reader.ReadSingle();
                        break;
                    case 6:
                        ____result.AreaMask = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionDumpScenesMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            writer.WriteArrayHeader(0);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            reader.Skip();
            return new global::SOTFEdit.Companion.Shared.Messages.CompanionDumpScenesMessage();
        }
    }

    public sealed class CompanionNetworkPlayerUpdateMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.HashSet<int>>(formatterResolver).Serialize(ref writer, value.Added, options);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.HashSet<int>>(formatterResolver).Serialize(ref writer, value.Deleted, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionNetworkPlayerUpdateMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.Added = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.HashSet<int>>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        ____result.Deleted = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.HashSet<int>>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionPoiListMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.PoiGroupType>(formatterResolver).Serialize(ref writer, value.Type, options);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>>(formatterResolver).Serialize(ref writer, value.Pois, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Type__ = default(global::SOTFEdit.Companion.Shared.PoiGroupType);
            var __Pois__ = default(global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Type__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.PoiGroupType>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        __Pois__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionPoiListMessage(__Type__, __Pois__);
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionPoiMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(7);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Title, options);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Description, options);
            writer.Write(value.X);
            writer.Write(value.Y);
            writer.Write(value.Z);
            writer.Write(value.AreaMask);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.ScreenshotPath, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Title__ = default(string);
            var __Description__ = default(string);
            var __X__ = default(float);
            var __Y__ = default(float);
            var __Z__ = default(float);
            var __AreaMask__ = default(int);
            var __ScreenshotPath__ = default(string);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Title__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        __Description__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 2:
                        __X__ = reader.ReadSingle();
                        break;
                    case 3:
                        __Y__ = reader.ReadSingle();
                        break;
                    case 4:
                        __Z__ = reader.ReadSingle();
                        break;
                    case 5:
                        __AreaMask__ = reader.ReadInt32();
                        break;
                    case 6:
                        __ScreenshotPath__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionPoiMessage(__Title__, __Description__, __X__, __Y__, __Z__, __AreaMask__, __ScreenshotPath__);
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionPosCollectionMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>>(formatterResolver).Serialize(ref writer, value.Positions, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionPosCollectionMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.Positions = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::System.Collections.Generic.List<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionPosMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(8);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.CharacterTarget>(formatterResolver).Serialize(ref writer, value.Target, options);
            writer.Write(value.X);
            writer.Write(value.Y);
            writer.Write(value.Z);
            writer.Write(value.Rotation);
            writer.Write(value.Mask);
            writer.Write(value.InstanceId);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Name, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionPosMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.Target = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.CharacterTarget>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        ____result.X = reader.ReadSingle();
                        break;
                    case 2:
                        ____result.Y = reader.ReadSingle();
                        break;
                    case 3:
                        ____result.Z = reader.ReadSingle();
                        break;
                    case 4:
                        ____result.Rotation = reader.ReadSingle();
                        break;
                    case 5:
                        ____result.Mask = reader.ReadInt32();
                        break;
                    case 6:
                        ____result.InstanceId = reader.ReadInt32();
                        break;
                    case 7:
                        ____result.Name = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionRequestPoiUpdateMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.PoiGroupType>(formatterResolver).Serialize(ref writer, value.Type, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionRequestPoiUpdateMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.Type = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.PoiGroupType>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionSettingsMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<decimal>(formatterResolver).Serialize(ref writer, value.PositionUpdateFrequency, options);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionSettingsMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.PositionUpdateFrequency = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<decimal>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

    public sealed class CompanionTeleportMessageFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage>
    {

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(6);
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.CharacterTarget>(formatterResolver).Serialize(ref writer, value.Target, options);
            writer.Write(value.X);
            writer.Write(value.Y);
            writer.Write(value.Z);
            writer.Write(value.AreaMask);
            writer.Write(value.GraphMask);
        }

        public global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            global::MessagePack.IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ____result = new global::SOTFEdit.Companion.Shared.Messages.CompanionTeleportMessage();

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        ____result.Target = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<global::SOTFEdit.Companion.Shared.CharacterTarget>(formatterResolver).Deserialize(ref reader, options);
                        break;
                    case 1:
                        ____result.X = reader.ReadSingle();
                        break;
                    case 2:
                        ____result.Y = reader.ReadSingle();
                        break;
                    case 3:
                        ____result.Z = reader.ReadSingle();
                        break;
                    case 4:
                        ____result.AreaMask = reader.ReadInt32();
                        break;
                    case 5:
                        ____result.GraphMask = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            reader.Depth--;
            return ____result;
        }
    }

}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

