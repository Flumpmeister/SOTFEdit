name: "Tag Release"

permissions:
  contents: write

on:
  push:
    tags:        
      - 'v*'           # Push events to every tag not containing /
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - run: mkdir -p artifacts
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x      
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
      - name: Restore NuGet packages
        run: dotnet restore
      - name: Build project
        run: dotnet build --configuration Release --no-restore # Build the app in Release mode
      - name: Run tests
        run: dotnet test --no-restore --verbosity normal # Run tests
      - name: Zip artifacts with PowerShell script
        shell: pwsh # Use PowerShell as the shell
        run: |
          # Zip the output files with the assembly name and version
          Compress-Archive -Path ${{ github.workspace }}\${{ github.event.repository.name }}\bin\Release\net6.0-windows\* -DestinationPath ${{ github.workspace }}\artifacts\${{ github.event.repository.name }}-${{ github.ref_name }}.zip

          # Set an output variable with the zip file name
          echo "::set-output name=zip_file::${{ github.event.repository.name }}-${{ github.ref_name }}.zip"
        id: zip # Give an id to this step to access its output later
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ github.workspace }}\artifacts\${{ steps.zip.outputs.zip_file }}
          asset_name: ${{ steps.zip.outputs.zip_file }}
          asset_content_type: application/zip
